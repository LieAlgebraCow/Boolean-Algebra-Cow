class StateMachine:

    def __init__(self, name):
        self.name = name
        self.current_state = None
        self.states = None

    def add_state(self, state):
        self.current_state = state

    def update(self, game_info):
        old_state = self.current_state
        transition_state = self.current_state.transition(game_info, self.states)
        if transition_state != None:
            self.current_state = transition_state
            self.current_state.sub_state_machine = StateMachine("Hello") #Generate name based on level

            startup = self.current_state.startup(game_info)
            self.current_state.sub_state_machine.add_state(startup[0])
            self.current_state.sub_state_machine.states = startup[1]

    def get_controls(self, game_info):
        return self.current_state.get_controls(game_info, self.current_state.sub_state_machine)


class State:

    def __init__(self,
                 transition,
                 startup,
                 get_controls,
                 name):

        self.name = name
        self.transition = transition
        self.startup = startup
        self.get_controls = get_controls
        self.sub_state_machine = None

